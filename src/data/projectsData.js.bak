// Project data organized by categories

export const projectsData = {
  javascript: [
    {
      title: 'Spock Rock Game',
      description: 'A classic game of Rock Paper Scissors extended with Lizard and Spock, implemented using HTML, CSS, and vanilla JavaScript. Play against the computer!',
      image: 'https://via.placeholder.com/800x500?text=Spock+Rock+Game',
      tags: ['JavaScript', 'HTML', 'CSS', 'Game Development', 'Confetti.js'],
      sourceCode: 'https://github.com/awesome-kartikey/spock-rock-game',
      liveDemo: 'https://awesome-kartikey.github.io/spock-rock-game/',
      features: [
        'Play Rock, Paper, Scissors, Lizard, Spock',
        'Player vs. Computer with random choices',
        'Score tracking',
        'Win animation with confetti',
        'Reset functionality'
      ]
    },
    {
      title: 'Quote Generator',
      description: 'An application that generates random inspirational quotes from an API (with local fallback) and allows tweeting them.',
      image: 'https://via.placeholder.com/800x500?text=Quote+Generator',
      tags: ['JavaScript', 'API Integration', 'CSS', 'HTML', 'Fetch API'],
      sourceCode: 'https://github.com/awesome-kartikey/quote-generator',
      liveDemo: 'https://awesome-kartikey.github.io/quote-generator/',
      features: [
        'Random quote generation (API/Local)',
        'Twitter sharing integration',
        'Loading indicator',
        'Responsive design',
        'Error handling with fallback'
      ]
    },
    {
      title: 'Picture-in-Picture Player',
      description: 'A web app demonstrating Picture-in-Picture (PiP) for screen sharing, video files, and YouTube URLs, with custom controls and filters.',
      image: 'https://via.placeholder.com/800x500?text=Picture+in+Picture',
      tags: ['JavaScript', 'Picture-in-Picture API', 'Media Capture API', 'Screen Sharing', 'HTML5 Video', 'CSS'],
      sourceCode: 'https://github.com/awesome-kartikey/picture-in-picture',
      liveDemo: 'https://awesome-kartikey.github.io/picture-in-picture/',
      features: [
        'Native and Custom PiP modes',
        'Screen sharing',
        'Video file upload',
        'YouTube URL playback',
        'Video filters, volume/speed control, fullscreen',
        'Keyboard shortcuts & Theme toggle'
      ]
    },
    {
      title: 'Book Keeper',
      description: 'A simple, clean web application to save and manage your website bookmarks locally in your browser using LocalStorage.',
      image: 'https://via.placeholder.com/800x500?text=Book+Keeper',
      tags: ['JavaScript', 'LocalStorage', 'CSS', 'HTML', 'DOM Manipulation'],
      sourceCode: 'https://github.com/awesome-kartikey/book-keeper',
      liveDemo: 'https://awesome-kartikey.github.io/book-keeper/',
      features: [
        'Add, view, and delete bookmarks',
        'Local persistence via LocalStorage',
        'URL validation',
        'Favicon fetching',
        'Modal interface'
      ]
    },
    {
      title: 'NASA APOD Viewer',
      description: 'Displays NASA\'s Astronomy Picture of the Day (APOD) using the NASA API, with features for loading more images and saving favorites.',
      image: 'https://via.placeholder.com/800x500?text=NASA+APOD',
      tags: ['JavaScript', 'NASA API', 'Fetch API', 'LocalStorage', 'CSS', 'HTML'],
      sourceCode: 'https://github.com/awesome-kartikey/nasa-apod',
      liveDemo: 'https://app.netlify.com/sites/nasa-mission-kartikey/', // Assuming Netlify link is for this
      features: [
        'Fetch and display NASA APOD images',
        '"Load More" functionality',
        'View image details (title, description, date)',
        'Add/Remove favorites using LocalStorage',
        'Loading indicator'
      ]
    },
    {
      title: 'Animated Navigation Nation',
      description: 'A modern, elegant, full-screen navigation menu component featuring smooth slide-in/out and staggered link animations.',
      image: 'https://via.placeholder.com/800x500?text=Animated+Navigation',
      tags: ['JavaScript', 'CSS Animations', 'HTML', 'UI Design', 'CSS Transitions'],
      sourceCode: 'https://github.com/awesome-kartikey/navigation-nation',
      liveDemo: 'https://awesome-kartikey.github.io/navigation-nation/',
      features: [
        'Hamburger menu toggle (animates to X)',
        'Full-screen overlay',
        'Smooth slide animations',
        'Staggered link animation',
        'Built purely with vanilla JS/CSS/HTML'
      ]
    },
    {
      title: 'Infinity Scroll Gallery',
      description: 'A photo gallery using the Unsplash API that implements infinite scrolling, loading new images automatically as the user scrolls down.',
      image: 'https://via.placeholder.com/800x500?text=Infinity+Scroll',
      tags: ['JavaScript', 'Unsplash API', 'CSS', 'Lazy Loading', 'Fetch API'],
      sourceCode: 'https://github.com/awesome-kartikey/infinity-scroll',
      liveDemo: 'https://awesome-kartikey.github.io/infinity-scroll/',
      features: [
        'Infinite scrolling image loading',
        'Dynamic content fetching from Unsplash',
        'Loading state indicator',
        'Direct links to Unsplash image pages',
        'Responsive design'
      ]
    },
    {
      title: 'Custom Countdown Timer',
      description: 'A visually appealing web app to create custom countdown timers to any future date, with persistence using LocalStorage and a video background.',
      image: 'https://via.placeholder.com/800x500?text=Countdown+Timer',
      tags: ['JavaScript', 'Date Object', 'CSS', 'LocalStorage', 'HTML5 Video'],
      sourceCode: 'https://github.com/awesome-kartikey/custom-countdown',
      liveDemo: 'https://awesome-kartikey.github.io/custom-countdown/',
      features: [
        'Set custom title and future date',
        'Real-time countdown display (D/H/M/S)',
        'Completion state message',
        'Persists last countdown in LocalStorage',
        'Reset functionality',
        'Video background'
      ]
    },
    {
      title: 'Music Player',
      description: 'A functional web-based music player with standard controls (play, pause, next, previous), progress bar, and dynamic UI updates.',
      image: 'https://via.placeholder.com/800x500?text=Music+Player',
      tags: ['JavaScript', 'HTML5 Audio API', 'CSS', 'HTML5', 'Font Awesome'],
      sourceCode: 'https://github.com/awesome-kartikey/music-player',
      liveDemo: 'https://awesome-kartikey.github.io/music-player/',
      features: [
        'Playback controls (Play, Pause, Next, Previous)',
        'Progress bar with seeking',
        'Current time and duration display',
        'Updates song title, artist, artwork',
        'Auto-plays next song'
      ]
    },
    {
      title: 'Web Calculator',
      description: 'A sleek, simple, and functional web-based calculator for standard arithmetic operations, built with vanilla HTML, CSS, and JavaScript.',
      image: 'https://via.placeholder.com/800x500?text=Calculator',
      tags: ['JavaScript', 'Math Operations', 'CSS Grid', 'HTML', 'DOM Manipulation'],
      sourceCode: 'https://github.com/awesome-kartikey/calculator',
      liveDemo: 'https://awesome-kartikey.github.io/calculator/',
      features: [
        'Basic arithmetic operations (+, -, ร, รท)',
        'Decimal input support',
        'Clear functionality',
        'Responsive design',
        'Sequential calculation logic'
      ]
    },
    {
      title: 'Splash Page Demo',
      description: 'A simple, static splash page for a conceptual mobile app, demonstrating basic HTML/CSS layout and JS background toggle.',
      image: 'https://via.placeholder.com/800x500?text=Splash+Page',
      tags: ['JavaScript', 'HTML', 'CSS', 'DOM Manipulation'],
      sourceCode: 'https://github.com/awesome-kartikey/splash-page',
      liveDemo: 'https://awesome-kartikey.github.io/splash-page/',
      features: [
        'Clean landing page design',
        'Displays mobile app mockups',
        'Interactive background toggle',
        'Links to placeholder app stores'
      ]
    },
    {
      title: 'Light/Dark Mode Toggle',
      description: 'A template demonstrating light and dark theme switching using CSS custom properties and JavaScript, saving preference via LocalStorage.',
      image: 'https://via.placeholder.com/800x500?text=Light/Dark+Mode',
      tags: ['JavaScript', 'CSS Variables', 'LocalStorage', 'UI Design', 'CSS'],
      sourceCode: 'https://github.com/awesome-kartikey/light-and-dark-mode',
      liveDemo: 'https://awesome-kartikey.github.io/light-and-dark-mode/',
      features: [
        'Theme toggle switch',
        'User preference persistence (LocalStorage)',
        'Dynamic content updates based on theme',
        'Uses CSS custom properties',
        'Smooth scrolling'
      ]
    },
    {
      title: 'Form Validator',
      description: 'A client-side form validator demonstrating HTML5 constraint validation and JavaScript enhancements for user feedback.',
      image: 'https://via.placeholder.com/800x500?text=Form+Validator',
      tags: ['JavaScript', 'Form Validation', 'HTML5 Validation', 'CSS', 'DOM Manipulation'],
      sourceCode: 'https://github.com/awesome-kartikey/form-validator',
      liveDemo: 'https://awesome-kartikey.github.io/form-validator/',
      features: [
        'Uses HTML5 validation attributes',
        'JS validation for password matching',
        'Success/error message display',
        'Visual feedback (input border colors)',
        'Lightweight (no external libraries)'
      ]
    },
    {
      title: 'Joke Teller',
      description: 'A fun web application that tells programming jokes using the JokeAPI and reads them aloud using the VoiceRSS Text-to-Speech API.',
      image: 'https://via.placeholder.com/800x500?text=Joke+Teller',
      tags: ['JavaScript', 'Text-to-Speech API', 'Joke API', 'Fetch API', 'CSS'],
      sourceCode: 'https://github.com/awesome-kartikey/joke-teller',
      liveDemo: 'https://awesome-kartikey.github.io/joke-teller/',
      features: [
        'Fetches random programming jokes',
        'Text-to-Speech playback',
        'Filters out inappropriate jokes',
        'Visual feedback (button disabled state)',
        'Responsive design'
      ]
    },
    // Video Player is covered by Picture-in-Picture (PiP) project which is more advanced
    {
      title: 'Paint Clone',
      description: 'A web-based paint application clone with drawing, erasing, color/size selection, local storage save/load, and image download.',
      image: 'https://via.placeholder.com/800x500?text=Paint+Clone',
      tags: ['JavaScript', 'Canvas API', 'CSS', 'Drawing Tools', 'LocalStorage', 'jscolor.js'],
      sourceCode: 'https://github.com/awesome-kartikey/paint-clone',
      liveDemo: 'https://awesome-kartikey.github.io/paint-clone/',
      features: [
        'Brush, Eraser, Bucket Fill tools',
        'Adjustable brush size and color',
        'Clear canvas functionality',
        'Save/Load drawing to LocalStorage',
        'Download canvas as JPEG'
      ]
    },
    {
      title: 'Pong Game Clone',
      description: 'A classic Pong game implementation playable in the browser (Player vs. Computer) with score tracking and increasing ball speed.',
      image: 'https://via.placeholder.com/800x500?text=Pong+Clone',
      tags: ['JavaScript', 'Canvas API', 'Game Development', 'Animation', 'HTML5'],
      sourceCode: 'https://github.com/awesome-kartikey/pong',
      liveDemo: 'https://awesome-kartikey.github.io/pong/',
      features: [
        'Classic Pong gameplay (Player vs. AI)',
        'Score tracking',
        'Increasing ball speed',
        'Simple computer AI',
        'Responsive design adjustments',
        'Game over screen with "Play Again"'
      ]
    },
    {
      title: 'Math Sprint Game',
      description: 'A fast-paced math quiz game testing arithmetic speed. Choose question count, timed rounds, best score tracking via LocalStorage.',
      image: 'https://via.placeholder.com/800x500?text=Math+Sprint+Game',
      tags: ['JavaScript', 'Math Operations', 'CSS', 'Game Development', 'LocalStorage', 'DOM Manipulation'],
      sourceCode: 'https://github.com/awesome-kartikey/math-sprint-game',
      liveDemo: 'https://awesome-kartikey.github.io/math-sprint-game',
      features: [
        'Multiple round lengths (10, 25, 50, 99 questions)',
        'Timed challenge with penalty for errors',
        'Right/Wrong evaluation format',
        'Best score tracking per question count',
        'Responsive design'
      ]
    },
    {
      title: 'Animated Template (AOS)',
      description: 'A modern, responsive, single-page HTML template featuring smooth scroll animations powered by AOS.js and styled with Tailwind CSS.',
      image: 'https://via.placeholder.com/800x500?text=Animated+Template',
      tags: ['JavaScript', 'AOS.js', 'Tailwind CSS', 'HTML', 'CSS', 'Responsive Design'],
      sourceCode: 'https://github.com/awesome-kartikey/animated-template',
      liveDemo: 'https://awesome-kartikey.github.io/animated-template/',
      features: [
        'Responsive Design (Tailwind CSS)',
        'Scroll animations (AOS.js)',
        'Modern UI based on Tailwind Starter Kit',
        'Component sections (Hero, Services, Team, etc.)',
        'Easy customization',
        'Font Awesome integration'
      ]
    },
    {
      title: 'Drag and Drop Kanban Board',
      description: 'An intuitive Kanban board web app with drag-and-drop functionality, inline editing, and local storage persistence.',
      image: 'https://via.placeholder.com/800x500?text=Drag+and+Drop',
      tags: ['JavaScript', 'Drag and Drop API', 'LocalStorage', 'CSS', 'HTML', 'DOM Manipulation'],
      sourceCode: 'https://github.com/awesome-kartikey/drag-and-drop',
      liveDemo: 'https://awesome-kartikey.github.io/drag-and-drop/',
      features: [
        'Multiple columns (Backlog, In Progress, etc.)',
        'Drag and drop tasks between columns',
        'Add, edit (inline), and delete tasks',
        'Local Storage persistence',
        'Responsive Design',
        'Custom styling'
      ]
    }
  ],
  react: [
    {
      title: 'Taskmate To-Do App',
      description: 'A simple React To-Do list application allowing task management (add, edit, delete) with theme customization and localStorage persistence.',
      image: 'https://via.placeholder.com/800x500?text=React+Taskmate',
      tags: ['React', 'useState', 'useEffect', 'LocalStorage', 'CSS', 'Bootstrap Icons'],
      sourceCode: 'https://github.com/awesome-kartikey/kartikey-taskmate-react',
      liveDemo: 'https://kartikey-taskmate-react.netlify.app/',
      features: [
        'Add, view, edit, delete tasks',
        'Data persistence via localStorage',
        'Multiple theme customization (saved locally)',
        'Clear all tasks option',
        'Responsive design'
      ]
    },
    {
      title: 'Cinemate Movie Discovery',
      description: 'A movie discovery app built with React and Tailwind CSS, utilizing the TMDB API to browse popular, top-rated, and upcoming movies.',
      image: 'https://via.placeholder.com/800x500?text=Cinemate',
      tags: ['React', 'React Router', 'Tailwind CSS', 'TMDB API', 'Fetch API'],
      sourceCode: 'https://github.com/awesome-kartikey/kartikey-cinemate',
      liveDemo: 'https://kartikey-cinemate.netlify.app/',
      features: [
        'Browse movies by category (Popular, Top Rated, Upcoming)',
        'View detailed movie information',
        'Search functionality by title',
        'Dark/Light mode toggle',
        'Responsive design'
      ]
    },
    {
      title: 'Shopmate (Basic Cart Assignment)',
      description: 'A basic React shopping cart UI demonstrating product listing and a static cart page using React Router.',
      image: 'https://via.placeholder.com/800x500?text=Shopmate+Basic',
      tags: ['React', 'React Router', 'CSS', 'Components'],
      sourceCode: 'https://github.com/awesome-kartikey/kartikey-shopmate',
      liveDemo: '', // No live link provided in README
      features: [
        'Product listing display',
        'Separate cart page',
        'Basic routing between pages',
        'Component-based structure',
        'Custom hook for page title'
      ]
    },
    {
      title: 'Shopmate (Context & Reducer Cart)',
      description: 'A simple shopping cart app using React Context API and useReducer for state management to handle adding/removing items.',
      image: 'https://via.placeholder.com/800x500?text=Shopmate+Context/Reducer',
      tags: ['React', 'Context API', 'useReducer', 'State Management', 'React Router', 'CSS'],
      sourceCode: 'https://github.com/awesome-kartikey/kartikey-shopmate-cr',
      liveDemo: '', // No live link provided in README
      features: [
        'Add/Remove items from cart',
        'View cart contents and total price',
        'State managed with Context API & useReducer',
        'Dynamic cart count in header',
        'Dynamic page titles'
      ]
    },
    {
      title: 'Shopmate (Redux Cart)',
      description: 'A shopping cart application demonstrating state management using Redux Toolkit for adding/removing items and dynamic updates.',
      image: 'https://via.placeholder.com/800x500?text=Shopmate+Redux',
      tags: ['React', 'Redux', 'Redux Toolkit', 'State Management', 'React Router', 'CSS'],
      sourceCode: 'https://github.com/awesome-kartikey/kartikey-shopmate-redux',
      liveDemo: 'https://kartikey-shopmate-redux.netlify.app/',
      features: [
        'Add/Remove items from cart',
        'Dedicated cart view page',
        'Real-time cart count and total price updates',
        'State managed with Redux Toolkit'
      ]
    },
    {
      title: 'Codebook E-Commerce',
      description: 'A frontend e-commerce app for eBooks using React & Tailwind. Features product filtering, sorting, cart, mock checkout, and user dashboard.',
      image: 'https://via.placeholder.com/800x500?text=Codebook+eCommerce',
      tags: ['React', 'Tailwind CSS', 'Context API', 'useReducer', 'State Management', 'React Router', 'json-server'],
      sourceCode: 'https://github.com/awesome-kartikey/kartikey-codebook',
      liveDemo: 'https://kartikey-codebook.onrender.com/',
      features: [
        'Browse, search, filter, sort eBooks',
        'Product details page',
        'User authentication (simulated)',
        'Shopping cart & Mock checkout',
        'Order history dashboard',
        'Dark mode',
        'Responsive design'
      ]
    },
    {
      title: 'Word Counter & Joke App',
      description: 'A React app providing a word/character counter tool and a separate page displaying random Chuck Norris jokes from an API.',
      image: 'https://via.placeholder.com/800x500?text=Word+Counter+%26+Joke',
      tags: ['React', 'React Router', 'Fetch API', 'CSS', 'useState'],
      sourceCode: 'https://github.com/awesome-kartikey/kartikey-wordcount-ul',
      liveDemo: 'https://kartikey-wordcount-ul.netlify.app/',
      features: [
        'Real-time character and word count',
        'Clear text functionality',
        'Fetches random Chuck Norris jokes',
        'Routing between counter and joke pages',
        'Custom 404 page'
      ]
    },
    // Tailwind CSS Crash Course - seems like learning material, not a project itself. Skip.
    // React Router - seems like learning material, not a project itself. Skip.
    {
      title: 'Monsters Rolodex',
      description: 'A React app fetching users ("monsters") from an API, displaying them as cards with RoboHash images, and providing real-time search.',
      image: 'https://via.placeholder.com/800x500?text=Monsters+Rolodex',
      tags: ['React', 'Fetch API', 'API Integration', 'CSS Grid', 'useState', 'useEffect'],
      sourceCode: 'https://github.com/awesome-kartikey/monsters-rolodex-v2',
      liveDemo: 'https://monster-rolodex-kartikey.netlify.app/',
      features: [
        'Fetches user data from JSONPlaceholder',
        'Displays users as monster cards (RoboHash images)',
        'Real-time search/filter by name',
        'Responsive card layout',
        'Built with functional components and hooks'
      ]
    },
    {
      title: 'Gym Exercise Finder',
      description: 'A React app using Material UI to find gym exercises via RapidAPI (ExerciseDB & YouTube). Browse by body part, search, view details/GIFs/videos.',
      image: 'https://via.placeholder.com/800x500?text=Gym+Exercise+Finder',
      tags: ['React', 'Material UI', 'React Router', 'API Integration', 'RapidAPI', 'CSS'],
      sourceCode: 'https://github.com/awesome-kartikey/gym-exercise',
      liveDemo: 'https://kk-gold-gym.netlify.app/',
      features: [
        'Search exercises (name, target, equipment, body part)',
        'Browse by body part category',
        'Detailed exercise view (GIF, instructions)',
        'Related YouTube exercise videos',
        'Similar exercise suggestions',
        'Pagination & Loading states'
      ]
    },
    {
      title: 'React Star Rating Component',
      description: 'A simple, reusable, and interactive star rating component built with React and Vite, allowing visual rating selection.',
      image: 'https://via.placeholder.com/800x500?text=Star+Rating',
      tags: ['React', 'Vite', 'Components', 'CSS', 'useState', 'Hooks'],
      sourceCode: 'https://github.com/awesome-kartikey/react-star-rating',
      liveDemo: '', // No live link provided in README
      features: [
        'Interactive star rating selection',
        'Hover effect',
        'Clear rating functionality',
        'Customizable maximum rating',
        'onChange callback for parent component'
      ]
    },
    {
      title: 'Robofriends (Basic)',
      description: 'A simple React app displaying a searchable list of "robot friends" with data from JSONPlaceholder and images from RoboHash.',
      image: 'https://via.placeholder.com/800x500?text=Robofriends',
      tags: ['React', 'Fetch API', 'API Integration', 'Tachyons', 'CSS'],
      sourceCode: 'https://github.com/awesome-kartikey/robofriends',
      liveDemo: '', // No live link provided in README
      features: [
        'Displays list of robot cards',
        'Fetches user data dynamically',
        'Uses RoboHash for dynamic images',
        'Real-time search functionality',
        'Styled with Tachyons'
      ]
    },
    {
      title: 'Twitter Clone Frontend',
      description: 'A frontend clone of Twitter using Next.js, GraphQL, React Query, and Tailwind CSS. Handles Google Auth, tweet feed, posting (with images), profiles, following.',
      image: 'https://via.placeholder.com/800x500?text=Twitter+Clone+(FE)',
      tags: ['React', 'Next.js', 'TypeScript', 'GraphQL', 'Tailwind CSS', 'React Query', 'Authentication', 'Google OAuth'],
      sourceCode: 'https://github.com/awesome-kartikey/Twitter',
      liveDemo: 'https://pulse-stream.onrender.com', // Assumed this is the live link for the frontend
      features: [
        'View tweet feed',
        'Create tweets with image uploads (via S3 pre-signed URLs)',
        'User profiles with follow/unfollow',
        'Google Authentication',
        'Recommended users list',
        'Type-safe API interaction (GraphQL Codegen)',
        'Server state management with React Query'
      ]
    },
    {
      title: 'Maze Pathfinder Visualizer',
      description: 'An interactive maze generator (Recursive Backtracking) and pathfinding algorithm visualizer (BFS, DFS) built using React and Vite.',
      image: 'https://via.placeholder.com/800x500?text=Pathfinder+Visualizer',
      tags: ['React', 'Vite', 'JavaScript', 'CSS', 'Algorithms', 'Visualization'],
      sourceCode: 'https://github.com/awesome-kartikey/Pathfinder_Visualizer_Kartikey',
      liveDemo: 'https://algomaze.netlify.app/',
      features: [
        'Random Maze Generation (Recursive Backtracking)',
        'Visualize BFS and DFS pathfinding',
        'Step-by-step algorithm visualization',
        'Interactive controls (generate, run BFS/DFS)',
        'Responsive design',
        'Loading indicator & Status messages'
      ]
    },
    {
        title: 'Vue Image Filter Project',
        description: 'A Vue 3 app allowing image upload, applying filters (via Photon WASM), and downloading the result. Built with Vite, TypeScript, Pinia, Tailwind.',
        image: 'https://via.placeholder.com/800x500?text=Vue+Image+Filter',
        tags: ['Vue', 'Vite', 'TypeScript', 'Pinia', 'WASM', 'Photon', 'Tailwind CSS', 'Image Processing'],
        sourceCode: 'https://github.com/awesome-kartikey/vue-image-project',
        liveDemo: 'https://image-filer-kartikey.netlify.app/',
        features: [
            'Drag and drop image upload',
            'Apply predefined filters (oceanic, vintage, etc.)',
            'Client-side image processing with WebAssembly',
            'Download filtered image',
            'Responsive UI (Tailwind)'
        ]
    },
  ],
  backend: [
    {
      title: 'Discord Weather/Astro Bot',
      description: 'A Discord bot providing weather forecasts and astronomical data (sunrise/sunset) using slash commands and the WeatherAPI.com.',
      image: 'https://via.placeholder.com/800x500?text=Discord+Bot',
      tags: ['Node.js', 'discord.js', 'API Integration', 'Axios', 'Bot', 'WeatherAPI'],
      sourceCode: 'https://github.com/awesome-kartikey/discord-bot',
      liveDemo: '', // Bots don't typically have a "live demo" link
      features: [
        '3-day weather forecast command (/forecast)',
        'Astronomical data command (/astro)',
        'Ping command for responsiveness check',
        'Utilizes Discord slash commands',
        'Fetches real-time data from WeatherAPI'
      ]
    },
    {
      title: 'Kepler Habitable Planets Finder',
      description: 'A Node.js script that analyzes NASA Kepler data (CSV) to identify potentially habitable exoplanets based on specific criteria.',
      image: 'https://via.placeholder.com/800x500?text=Planets+Finder',
      tags: ['Node.js', 'CSV Parsing', 'Data Processing', 'Streams'],
      sourceCode: 'https://github.com/awesome-kartikey/planets-project',
      liveDemo: '', // Script doesn't have a live demo link
      features: [
        'Parses CSV data using streams',
        'Filters exoplanets by disposition, stellar flux, radius',
        'Outputs names and count of habitable planets',
        'Uses `csv-parse` library'
      ]
    },
    {
      title: 'Short URL Service (Node.js)',
      description: 'A Node.js/Express/MongoDB application for shortening URLs, with user authentication, redirection, and click tracking.',
      image: 'https://via.placeholder.com/800x500?text=URL+Shortener+Backend',
      tags: ['Node.js', 'Express', 'MongoDB', 'Mongoose', 'EJS', 'Authentication', 'JWT (implied)'],
      sourceCode: 'https://github.com/awesome-kartikey/short-url-nodejs',
      liveDemo: 'https://short-url-nodejs.onrender.com',
      features: [
        'User signup/login',
        'Generate unique short IDs for URLs',
        'Redirect short URLs to original URLs',
        'Track clicks per URL',
        'List user-specific generated URLs',
        'Basic web interface using EJS'
      ]
    },
    {
      title: 'Stack Overflow Clone Backend',
      description: 'Backend API service for a Stack Overflow clone using Node.js, Express, MongoDB. Provides endpoints for auth, questions, answers, and profiles.',
      image: 'https://via.placeholder.com/800x500?text=Stack+Overflow+Backend',
      tags: ['Node.js', 'Express', 'MongoDB', 'Mongoose', 'JWT', 'bcryptjs', 'REST API'],
      sourceCode: 'https://github.com/awesome-kartikey/stack-overflow-backend',
      liveDemo: '', // Backend API, no live frontend demo link
      features: [
        'Secure user authentication (Signup/Login) with JWT',
        'CRUD operations for Questions (Ask, View, Delete, Vote)',
        'CRUD operations for Answers (Post, Delete)',
        'View and update user profiles',
        'RESTful API design'
      ]
    },
    {
      title: 'Twitter Clone Backend Server',
      description: 'A GraphQL backend for a Twitter clone using Node.js, TypeScript, PostgreSQL, Prisma, Redis, S3. Handles auth, tweets, follows, image uploads.',
      image: 'https://via.placeholder.com/800x500?text=Twitter+Clone+(BE)',
      tags: ['Node.js', 'Express', 'GraphQL', 'Apollo Server', 'TypeScript', 'PostgreSQL', 'Prisma', 'Redis', 'AWS S3', 'JWT', 'Authentication'],
      sourceCode: 'https://github.com/awesome-kartikey/piyushgarg-dev-twitter-clone-server',
      liveDemo: '', // Backend API, no live frontend demo link
      features: [
        'Google OAuth verification & JWT sessions',
        'GraphQL API for users, tweets, follows',
        'Create tweets with image URLs',
        'Generate pre-signed S3 URLs for image uploads',
        'Follow/unfollow system',
        'User recommendations',
        'Redis caching for tweets/recommendations',
        'Rate limiting for tweet creation'
      ]
    },
  ],
  fullstack: [
    {
      title: 'AWS Serverless Distance Calculator',
      description: 'A web app using AWS serverless tech (API Gateway, Lambda, DynamoDB) to calculate the great-circle distance between two points.',
      image: 'https://via.placeholder.com/800x500?text=AWS+Distance+Calculator',
      tags: ['AWS Lambda', 'API Gateway', 'DynamoDB', 'Serverless', 'JavaScript', 'HTML', 'CSS', 'Python'],
      sourceCode: 'https://github.com/awesome-kartikey/AWS-Project-Code',
      liveDemo: '', // No live demo link provided
      features: [
        'Simple web interface for input',
        'Haversine formula distance calculation',
        'Serverless backend (Lambda)',
        'API via API Gateway',
        'Data persistence in DynamoDB',
        'Scalable architecture'
      ]
    },
    {
      title: 'Crwn Clothing E-commerce',
      description: 'A full-stack e-commerce app (React/Redux frontend, Firebase backend) for clothing. Features browsing, cart, auth (Email/Google), Stripe payments.',
      image: 'https://via.placeholder.com/800x500?text=Crwn+Clothing',
      tags: ['React', 'Redux', 'Redux Saga', 'Firebase', 'Firestore', 'Firebase Auth', 'Stripe', 'Styled Components', 'TypeScript', 'Netlify Functions'],
      sourceCode: 'https://github.com/awesome-kartikey/crwn-clothing-kartikey',
      liveDemo: 'https://app.netlify.com/sites/crown-clothing-karikey/', // This seems to be a Netlify admin link, not a live demo link. Correct if possible.
      features: [
        'Product browsing by category',
        'Shopping cart functionality',
        'User Authentication (Email/Password, Google)',
        'Secure payments via Stripe',
        'State management with Redux/Saga',
        'Firebase backend for data/auth',
        'Serverless function for Stripe integration'
      ]
    },
    {
      title: 'Kartikey Portfolio with AI Chatbot',
      description: 'An interactive developer portfolio (React/Vite/Tailwind) with animations, blog integration (Hashnode), contact form (EmailJS), and an AI chatbot (Gemini via Supabase).',
      image: 'https://via.placeholder.com/800x500?text=AI+Portfolio',
      tags: ['React', 'Vite', 'Tailwind CSS', 'Framer Motion', 'Supabase', 'Edge Functions', 'AI', 'Gemini', 'EmailJS', 'Hashnode API', 'Three.js'],
      sourceCode: 'https://github.com/awesome-kartikey/kartikey-portfolio-ai',
      liveDemo: 'https://iamkartikey.vercel.app/',
      features: [
        'Interactive UI with animations',
        'Responsive design',
        'Dark/Light mode',
        'Project showcase & Skills section',
        'AI Chatbot knowledgeable about the portfolio owner',
        'Dynamic blog post fetching (Hashnode)',
        'Contact form (EmailJS)',
        'Resume viewer & Particle background'
      ]
    },
    {
      title: 'WriteNode Blogging App',
      description: 'A lightweight React blogging app using Firebase (Auth/Firestore). Users can log in via Google, create posts, and delete their own posts.',
      image: 'https://via.placeholder.com/800x500?text=WriteNode+Blog',
      tags: ['React', 'Firebase', 'Firebase Auth', 'Firestore', 'React Router', 'CSS', 'Authentication'],
      sourceCode: 'https://github.com/awesome-kartikey/kartikey-writenode',
      liveDemo: 'https://kartikey-writenode.netlify.app/',
      features: [
        'Google Authentication',
        'Create and view posts',
        'Delete own posts',
        'Real-time updates (implicit via Firestore)',
        'Loading skeletons',
        'Protected routes for creation'
      ]
    },
    {
      title: 'Multiplayer Pong Game',
      description: 'A real-time multiplayer Pong game built with Node.js, Express, Socket.IO, and HTML Canvas. Features simple matchmaking.',
      image: 'https://via.placeholder.com/800x500?text=Multiplayer+Pong',
      tags: ['Node.js', 'Express', 'Socket.IO', 'WebSockets', 'Game Development', 'Canvas API', 'HTML', 'CSS', 'JavaScript'],
      sourceCode: 'https://github.com/awesome-kartikey/multiplayer-pong',
      liveDemo: '', // Requires server running, no static live demo link
      features: [
        'Real-time multiplayer gameplay',
        'Simple matchmaking (pairs players)',
        'Classic Pong mechanics',
        'Low-latency communication via Socket.IO',
        'Canvas rendering'
      ]
    },
    {
      title: 'NASA Mission Control Dashboard',
      description: 'A full-stack app to explore habitable planets (Kepler data), schedule/view rocket launches (including SpaceX data), and abort missions, with a sci-fi UI.',
      image: 'https://via.placeholder.com/800x500?text=NASA+Mission+Control',
      tags: ['React', 'Node.js', 'Express', 'MongoDB', 'Mongoose', 'API Integration', 'SpaceX API', 'Arwes UI', 'Docker'],
      sourceCode: 'https://github.com/awesome-kartikey/nasa-project',
      liveDemo: 'https://nasa-project-0c1g.onrender.com/',
      features: [
        'Explore habitable exoplanets',
        'Schedule new rocket launches',
        'View upcoming and past launches (user + SpaceX)',
        'Abort scheduled missions',
        'Interactive Sci-Fi UI (Arwes)',
        'Integrates real SpaceX data',
        'Dockerized for deployment'
      ]
    },
    {
      title: 'Notion Clone (Jotion)',
      description: 'A fullstack Notion clone using Next.js, Convex (real-time DB), Clerk (auth), EdgeStore (files), BlockNote (editor). Features nested docs, publishing, search.',
      image: 'https://via.placeholder.com/800x500?text=Notion+Clone',
      tags: ['Next.js', 'TypeScript', 'Convex', 'Clerk', 'EdgeStore', 'BlockNote', 'Tailwind CSS', 'Real-time', 'Authentication', 'File Storage'],
      sourceCode: 'https://github.com/awesome-kartikey/notion-clone-kartikey',
      liveDemo: 'https://notion-clone-kartikey.vercel.app/',
      features: [
        'Real-time database updates (Convex)',
        'Notion-style rich text editor (BlockNote)',
        'Nested documents',
        'Light/Dark mode',
        'Authentication (Clerk)',
        'Cover image uploads (EdgeStore)',
        'Soft delete & restore (Trash Can)',
        'Publish documents publicly',
        'Search functionality'
      ]
    },
    {
      title: 'SmartBrain Face Detection',
      description: 'A full-stack app (React frontend, Node/Express/PostgreSQL backend) that detects faces in images via URL using the Clarifai API and tracks user submissions.',
      image: 'https://via.placeholder.com/800x500?text=SmartBrain+Face+Detection',
      tags: ['React', 'Node.js', 'Express', 'PostgreSQL', 'Knex.js', 'bcryptjs', 'Clarifai API', 'API Integration', 'Authentication', 'Tachyons'],
      sourceCode: 'https://github.com/awesome-kartikey/SmartBrain-Project',
      // Multiple live links provided, choose the most likely pair
      liveDemo: 'https://intellieyes.netlify.app/', // Frontend
      // Backend: 'https://smart-brain-api-aqfv.onrender.com' / 'https://stack-overflow-kartikey-backend-server.onrender.com' (Need clarification which one is correct for THIS project)
      features: [
        'User registration and sign-in',
        'Face detection in images via URL (Clarifai API)',
        'Tracks user submission count (rank)',
        'Interactive React UI',
        'Animated particle background'
      ]
    },
    {
      title: 'SpeakEasyAI (Video/Audio to Blog)',
      description: 'An AI-powered SaaS app (Next.js 14, OpenAI, Stripe, Clerk, NeonDB, UploadThing) that converts video/audio files into SEO-friendly blog posts.',
      image: 'https://www.speakeasyai.dev/og-image.png', // Using provided image
      tags: ['Next.js', 'TypeScript', 'Tailwind CSS', 'ShadCN UI', 'Clerk', 'NeonDb', 'PostgreSQL', 'UploadThing', 'OpenAI API', 'Whisper API', 'GPT API', 'Stripe', 'SaaS', 'AI'],
      sourceCode: 'https://github.com/awesome-kartikey/speakeasyai',
      liveDemo: 'https://videotonotes.vercel.app/',
      features: [
        'AI transcription (Whisper) & blog generation (GPT)',
        'Audio/Video file uploads (UploadThing)',
        'Authentication (Clerk)',
        'Subscription plans via Stripe',
        'User dashboard & post management',
        'Integrated Markdown editor',
        'Content export as Markdown'
      ]
    },
    {
      title: 'Stack Overflow Clone (Kartikey)',
      description: 'A full-stack Stack Overflow clone using React/Redux frontend and Node/Express/MongoDB backend. Features auth, Q&A, voting, tags, profiles.',
      image: 'https://via.placeholder.com/800x500?text=Stack+Overflow+Clone',
      tags: ['React', 'Redux', 'Redux Thunk', 'Node.js', 'Express', 'MongoDB', 'Mongoose', 'JWT', 'bcryptjs', 'REST API', 'Authentication'],
      sourceCode: 'https://github.com/awesome-kartikey/Stack-Overflow-Kartikey',
      liveDemo: 'https://stack-overflow-kartikey.netlify.app/',
      features: [
        'User Authentication (JWT)',
        'Ask and Answer Questions',
        'Upvote/Downvote Questions',
        'View Questions by Tags',
        'User Profiles with editing',
        'List of Users'
      ]
    },
    {
      title: 'Dev Overflow (Stack Overflow Clone Next.js 14)',
      description: 'A modern Stack Overflow clone using Next.js 14, TypeScript, MongoDB, Clerk Auth, TinyMCE editor, AI answer generation (OpenAI), voting, reputation, collections.',
      image: 'https://i.ibb.co/x7FChRP/Thumbnail.jpg', // Using provided image
      tags: ['Next.js', 'TypeScript', 'Tailwind CSS', 'Shadcn UI', 'MongoDB', 'Mongoose', 'Clerk', 'Authentication', 'TinyMCE', 'OpenAI API', 'AI', 'Server Actions'],
      sourceCode: 'https://github.com/awesome-kartikey/stack_overflow_nextjs14',
      liveDemo: 'https://kartikey-dev-overflow.vercel.app/',
      features: [
        'Authentication (Clerk)',
        'Ask/Answer Questions (TinyMCE editor)',
        'Voting & Reputation System',
        'Save Questions to Collections',
        'User Profiles & Editing',
        'Community & Tags Pages',
        'Local & Global Search',
        'AI-Powered Answer Generation (OpenAI)',
        'Light/Dark Mode'
      ]
    }
  ]
};

export const projectCategories = [
  { id: 'all', label: 'All Projects' },
  { id: 'javascript', label: 'JavaScript' },
  { id: 'react', label: 'React & Vue' }, // Renamed to include Vue project
  { id: 'backend', label: 'Backend' },
  { id: 'fullstack', label: 'Full Stack' }
];