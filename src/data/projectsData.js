export const projectsData = {
  javascript: [
    {
      title: "Spock Rock Game",
      description:
        "A classic game of Rock Paper Scissors extended with Lizard and Spock, implemented using HTML, CSS, and vanilla JavaScript. Play against the computer!",
      image: "/project-screenshots/spock-rock-game.png",
      tags: ["JavaScript", "HTML", "CSS", "Game Development", "Confetti.js"],
      sourceCode: "https://github.com/awesome-kartikey/spock-rock-game",
      liveDemo: "https://awesome-kartikey.github.io/spock-rock-game/",
      features: [
        "Play Rock, Paper, Scissors, Lizard, Spock",
        "Player vs. Computer with random choices",
        "Score tracking",
        "Win animation with confetti",
        "Reset functionality",
      ],
    },
    {
      title: "Quote Generator",
      description:
        "An application that generates random inspirational quotes from an API (with local fallback) and allows tweeting them.",
      image: "/project-screenshots/quote-generator.png",
      tags: ["JavaScript", "API Integration", "CSS", "HTML", "Fetch API"],
      sourceCode: "https://github.com/awesome-kartikey/quote-generator",
      liveDemo: "https://awesome-kartikey.github.io/quote-generator/",
      features: [
        "Random quote generation (API/Local)",
        "Twitter sharing integration",
        "Loading indicator",
        "Responsive design",
        "Error handling with fallback",
      ],
    },
    {
      title: "Picture-in-Picture Player",
      description:
        "A web app demonstrating Picture-in-Picture (PiP) for screen sharing, video files, and YouTube URLs, with custom controls and filters.",
      image: "/project-screenshots/picture-in-picture-player.png",
      tags: [
        "JavaScript",
        "Picture-in-Picture API",
        "Media Capture API",
        "Screen Sharing",
        "HTML5 Video",
        "CSS",
      ],
      sourceCode: "https://github.com/awesome-kartikey/picture-in-picture",
      liveDemo: "https://awesome-kartikey.github.io/picture-in-picture/",
      features: [
        "Native and Custom PiP modes",
        "Screen sharing",
        "Video file upload",
        "YouTube URL playback",
        "Video filters, volume/speed control, fullscreen",
        "Keyboard shortcuts & Theme toggle",
      ],
    },
    {
      title: "Book Keeper",
      description:
        "A simple, clean web application to save and manage your website bookmarks locally in your browser using LocalStorage.",
      image: "/project-screenshots/book-keeper.png",
      tags: ["JavaScript", "LocalStorage", "CSS", "HTML", "DOM Manipulation"],
      sourceCode: "https://github.com/awesome-kartikey/book-keeper",
      liveDemo: "https://awesome-kartikey.github.io/book-keeper/",
      features: [
        "Add, view, and delete bookmarks",
        "Local persistence via LocalStorage",
        "URL validation",
        "Favicon fetching",
        "Modal interface",
      ],
    },
    {
      title: "NASA APOD Viewer",
      description:
        "Displays NASA's Astronomy Picture of the Day (APOD) using the NASA API, with features for loading more images and saving favorites.",
      image: "/project-screenshots/nasa-apod-viewer.png",
      tags: [
        "JavaScript",
        "NASA API",
        "Fetch API",
        "LocalStorage",
        "CSS",
        "HTML",
      ],
      sourceCode: "https://github.com/awesome-kartikey/nasa-apod",
      liveDemo: "https://nasa-mission-kartikey.netlify.app/",
      features: [
        "Fetch and display NASA APOD images",
        '"Load More" functionality',
        "View image details (title, description, date)",
        "Add/Remove favorites using LocalStorage",
        "Loading indicator",
      ],
    },
    {
      title: "Animated Navigation Nation",
      description:
        "A modern, elegant, full-screen navigation menu component featuring smooth slide-in/out and staggered link animations.",
      image: "/project-screenshots/animated-navigation-nation.png",
      tags: [
        "JavaScript",
        "CSS Animations",
        "HTML",
        "UI Design",
        "CSS Transitions",
      ],
      sourceCode: "https://github.com/awesome-kartikey/navigation-nation",
      liveDemo: "https://awesome-kartikey.github.io/navigation-nation/",
      features: [
        "Hamburger menu toggle (animates to X)",
        "Full-screen overlay",
        "Smooth slide animations",
        "Staggered link animation",
        "Built purely with vanilla JS/CSS/HTML",
      ],
    },
    {
      title: "Infinity Scroll Gallery",
      description:
        "A photo gallery using the Unsplash API that implements infinite scrolling, loading new images automatically as the user scrolls down.",
      image: "/project-screenshots/infinity-scroll-gallery.png",
      tags: ["JavaScript", "Unsplash API", "CSS", "Lazy Loading", "Fetch API"],
      sourceCode: "https://github.com/awesome-kartikey/infinity-scroll",
      liveDemo: "https://awesome-kartikey.github.io/infinity-scroll/",
      features: [
        "Infinite scrolling image loading",
        "Dynamic content fetching from Unsplash",
        "Loading state indicator",
        "Direct links to Unsplash image pages",
        "Responsive design",
      ],
    },
    {
      title: "Custom Countdown Timer",
      description:
        "A visually appealing web app to create custom countdown timers to any future date, with persistence using LocalStorage and a video background.",
      image: "/project-screenshots/custom-countdown-timer.png",
      tags: ["JavaScript", "Date Object", "CSS", "LocalStorage", "HTML5 Video"],
      sourceCode: "https://github.com/awesome-kartikey/custom-countdown",
      liveDemo: "https://awesome-kartikey.github.io/custom-countdown/",
      features: [
        "Set custom title and future date",
        "Real-time countdown display (D/H/M/S)",
        "Completion state message",
        "Persists last countdown in LocalStorage",
        "Reset functionality",
        "Video background",
      ],
    },
    {
      title: "Music Player",
      description:
        "A functional web-based music player with standard controls (play, pause, next, previous), progress bar, and dynamic UI updates.",
      image: "/project-screenshots/music-player.png",
      tags: ["JavaScript", "HTML5 Audio API", "CSS", "HTML5", "Font Awesome"],
      sourceCode: "https://github.com/awesome-kartikey/music-player",
      liveDemo: "https://awesome-kartikey.github.io/music-player/",
      features: [
        "Playback controls (Play, Pause, Next, Previous)",
        "Progress bar with seeking",
        "Current time and duration display",
        "Updates song title, artist, artwork",
        "Auto-plays next song",
      ],
    },
    {
      title: "Web Calculator",
      description:
        "A sleek, simple, and functional web-based calculator for standard arithmetic operations, built with vanilla HTML, CSS, and JavaScript.",
      image: "/project-screenshots/web-calculator.png",
      tags: [
        "JavaScript",
        "Math Operations",
        "CSS Grid",
        "HTML",
        "DOM Manipulation",
      ],
      sourceCode: "https://github.com/awesome-kartikey/calculator",
      liveDemo: "https://awesome-kartikey.github.io/calculator/",
      features: [
        "Basic arithmetic operations (+, -, ร, รท)",
        "Decimal input support",
        "Clear functionality",
        "Responsive design",
        "Sequential calculation logic",
      ],
    },
    {
      title: "Splash Page Demo",
      description:
        "A simple, static splash page for a conceptual mobile app, demonstrating basic HTML/CSS layout and JS background toggle.",
      image: "/project-screenshots/splash-page-demo.png",
      tags: ["JavaScript", "HTML", "CSS", "DOM Manipulation"],
      sourceCode: "https://github.com/awesome-kartikey/splash-page",
      liveDemo: "https://awesome-kartikey.github.io/splash-page/",
      features: [
        "Clean landing page design",
        "Displays mobile app mockups",
        "Interactive background toggle",
        "Links to placeholder app stores",
      ],
    },
    {
      title: "Light/Dark Mode Toggle",
      description:
        "A template demonstrating light and dark theme switching using CSS custom properties and JavaScript, saving preference via LocalStorage.",
      image: "/project-screenshots/lightdark-mode-toggle.png",
      tags: ["JavaScript", "CSS Variables", "LocalStorage", "UI Design", "CSS"],
      sourceCode: "https://github.com/awesome-kartikey/light-and-dark-mode",
      liveDemo: "https://awesome-kartikey.github.io/light-and-dark-mode/",
      features: [
        "Theme toggle switch",
        "User preference persistence (LocalStorage)",
        "Dynamic content updates based on theme",
        "Uses CSS custom properties",
        "Smooth scrolling",
      ],
    },
    {
      title: "Form Validator",
      description:
        "A client-side form validator demonstrating HTML5 constraint validation and JavaScript enhancements for user feedback.",
      image: "/project-screenshots/form-validator.png",
      tags: [
        "JavaScript",
        "Form Validation",
        "HTML5 Validation",
        "CSS",
        "DOM Manipulation",
      ],
      sourceCode: "https://github.com/awesome-kartikey/form-validator",
      liveDemo: "https://awesome-kartikey.github.io/form-validator/",
      features: [
        "Uses HTML5 validation attributes",
        "JS validation for password matching",
        "Success/error message display",
        "Visual feedback (input border colors)",
        "Lightweight (no external libraries)",
      ],
    },
    {
      title: "Joke Teller",
      description:
        "A fun web application that tells programming jokes using the JokeAPI and reads them aloud using the VoiceRSS Text-to-Speech API.",
      image: "/project-screenshots/joke-teller.png",
      tags: [
        "JavaScript",
        "Text-to-Speech API",
        "Joke API",
        "Fetch API",
        "CSS",
      ],
      sourceCode: "https://github.com/awesome-kartikey/joke-teller",
      liveDemo: "https://awesome-kartikey.github.io/joke-teller/",
      features: [
        "Fetches random programming jokes",
        "Text-to-Speech playback",
        "Filters out inappropriate jokes",
        "Visual feedback (button disabled state)",
        "Responsive design",
      ],
    },
    {
      title: "Paint Clone",
      description:
        "A web-based paint application clone with drawing, erasing, color/size selection, local storage save/load, and image download.",
      image: "/project-screenshots/paint-clone.png",
      tags: [
        "JavaScript",
        "Canvas API",
        "CSS",
        "Drawing Tools",
        "LocalStorage",
        "jscolor.js",
      ],
      sourceCode: "https://github.com/awesome-kartikey/paint-clone",
      liveDemo: "https://awesome-kartikey.github.io/paint-clone/",
      features: [
        "Brush, Eraser, Bucket Fill tools",
        "Adjustable brush size and color",
        "Clear canvas functionality",
        "Save/Load drawing to LocalStorage",
        "Download canvas as JPEG",
      ],
    },
    {
      title: "Pong Game Clone",
      description:
        "A classic Pong game implementation playable in the browser (Player vs. Computer) with score tracking and increasing ball speed.",
      image: "/project-screenshots/pong-game-clone.png",
      tags: [
        "JavaScript",
        "Canvas API",
        "Game Development",
        "Animation",
        "HTML5",
      ],
      sourceCode: "https://github.com/awesome-kartikey/pong",
      liveDemo: "https://awesome-kartikey.github.io/pong/",
      features: [
        "Classic Pong gameplay (Player vs. AI)",
        "Score tracking",
        "Increasing ball speed",
        "Simple computer AI",
        "Responsive design adjustments",
        'Game over screen with "Play Again"',
      ],
    },
    {
      title: "Math Sprint Game",
      description:
        "A fast-paced math quiz game testing arithmetic speed. Choose question count, timed rounds, best score tracking via LocalStorage.",
      image: "/project-screenshots/math-sprint-game.png",
      tags: [
        "JavaScript",
        "Math Operations",
        "CSS",
        "Game Development",
        "LocalStorage",
        "DOM Manipulation",
      ],
      sourceCode: "https://github.com/awesome-kartikey/math-sprint-game",
      liveDemo: "https://awesome-kartikey.github.io/math-sprint-game",
      features: [
        "Multiple round lengths (10, 25, 50, 99 questions)",
        "Timed challenge with penalty for errors",
        "Right/Wrong evaluation format",
        "Best score tracking per question count",
        "Responsive design",
      ],
    },
    {
      title: "Animated Template (AOS)",
      description:
        "A modern, responsive, single-page HTML template featuring smooth scroll animations powered by AOS.js and styled with Tailwind CSS.",
      image: "/project-screenshots/animated-template-aos.png",
      tags: [
        "JavaScript",
        "AOS.js",
        "Tailwind CSS",
        "HTML",
        "CSS",
        "Responsive Design",
      ],
      sourceCode: "https://github.com/awesome-kartikey/animated-template",
      liveDemo: "https://awesome-kartikey.github.io/animated-template/",
      features: [
        "Responsive Design (Tailwind CSS)",
        "Scroll animations (AOS.js)",
        "Modern UI based on Tailwind Starter Kit",
        "Component sections (Hero, Services, Team, etc.)",
        "Easy customization",
        "Font Awesome integration",
      ],
    },
    {
      title: "Drag and Drop Kanban Board",
      description:
        "An intuitive Kanban board web app with drag-and-drop functionality, inline editing, and local storage persistence.",
      image: "/project-screenshots/drag-and-drop-kanban-board.png",
      tags: [
        "JavaScript",
        "Drag and Drop API",
        "LocalStorage",
        "CSS",
        "HTML",
        "DOM Manipulation",
      ],
      sourceCode: "https://github.com/awesome-kartikey/drag-and-drop",
      liveDemo: "https://awesome-kartikey.github.io/drag-and-drop/",
      features: [
        "Multiple columns (Backlog, In Progress, etc.)",
        "Drag and drop tasks between columns",
        "Add, edit (inline), and delete tasks",
        "Local Storage persistence",
        "Responsive Design",
        "Custom styling",
      ],
    },
  ],
  react: [
    {
      title: "Taskmate To-Do App",
      description:
        "A simple React To-Do list application allowing task management (add, edit, delete) with theme customization and localStorage persistence.",
      image: "/project-screenshots/taskmate-to-do-app.png",
      tags: [
        "React",
        "useState",
        "useEffect",
        "LocalStorage",
        "CSS",
        "Bootstrap Icons",
      ],
      sourceCode: "https://github.com/awesome-kartikey/kartikey-taskmate-react",
      liveDemo: "https://kartikey-taskmate-react.netlify.app/",
      features: [
        "Add, view, edit, delete tasks",
        "Data persistence via localStorage",
        "Multiple theme customization (saved locally)",
        "Clear all tasks option",
        "Responsive design",
      ],
    },
    {
      title: "Cinemate Movie Discovery",
      description:
        "A movie discovery app built with React and Tailwind CSS, utilizing the TMDB API to browse popular, top-rated, and upcoming movies.",
      image: "/project-screenshots/cinemate-movie-discovery.png",
      tags: ["React", "React Router", "Tailwind CSS", "TMDB API", "Fetch API"],
      sourceCode: "https://github.com/awesome-kartikey/kartikey-cinemate",
      liveDemo: "https://kartikey-cinemate.netlify.app/",
      features: [
        "Browse movies by category (Popular, Top Rated, Upcoming)",
        "View detailed movie information",
        "Search functionality by title",
        "Dark/Light mode toggle",
        "Responsive design",
      ],
    },
    {
      title: "Shopmate (Basic Cart Assignment)",
      description:
        "A basic React shopping cart UI demonstrating product listing and a static cart page using React Router.",
      image: "/project-screenshots/shopmate-redux-cart.png",
      tags: ["React", "React Router", "CSS", "Components"],
      sourceCode: "https://github.com/awesome-kartikey/kartikey-shopmate",
      liveDemo: "",
      features: [
        "Product listing display",
        "Separate cart page",
        "Basic routing between pages",
        "Component-based structure",
        "Custom hook for page title",
      ],
    },
    {
      title: "Shopmate (Context & Reducer Cart)",
      description:
        "A simple shopping cart app using React Context API and useReducer for state management to handle adding/removing items.",
      image: "/project-screenshots/shopmate-redux-cart.png",
      tags: [
        "React",
        "Context API",
        "useReducer",
        "State Management",
        "React Router",
        "CSS",
      ],
      sourceCode: "https://github.com/awesome-kartikey/kartikey-shopmate-cr",
      liveDemo: "",
      features: [
        "Add/Remove items from cart",
        "View cart contents and total price",
        "State managed with Context API & useReducer",
        "Dynamic cart count in header",
        "Dynamic page titles",
      ],
    },
    {
      title: "Shopmate (Redux Cart)",
      description:
        "A shopping cart application demonstrating state management using Redux Toolkit for adding/removing items and dynamic updates.",
      image: "/project-screenshots/shopmate-redux-cart.png",
      tags: [
        "React",
        "Redux",
        "Redux Toolkit",
        "State Management",
        "React Router",
        "CSS",
      ],
      sourceCode: "https://github.com/awesome-kartikey/kartikey-shopmate-redux",
      liveDemo: "https://kartikey-shopmate-redux.netlify.app/",
      features: [
        "Add/Remove items from cart",
        "Dedicated cart view page",
        "Real-time cart count and total price updates",
        "State managed with Redux Toolkit",
      ],
    },
    {
      title: "Codebook E-Commerce",
      description:
        "A frontend e-commerce app for eBooks using React & Tailwind. Features product filtering, sorting, cart, mock checkout, and user dashboard.",
      image: "/project-screenshots/codebook-e-commerce.png",
      tags: [
        "React",
        "Tailwind CSS",
        "Context API",
        "useReducer",
        "State Management",
        "React Router",
        "json-server",
      ],
      sourceCode: "https://github.com/awesome-kartikey/kartikey-codebook",
      liveDemo: "https://kartikey-codebook.onrender.com/",
      features: [
        "Browse, search, filter, sort eBooks",
        "Product details page",
        "User authentication (simulated)",
        "Shopping cart & Mock checkout",
        "Order history dashboard",
        "Dark mode",
        "Responsive design",
      ],
    },
    {
      title: "Word Counter & Joke App",
      description:
        "A React app providing a word/character counter tool and a separate page displaying random Chuck Norris jokes from an API.",
      image: "/project-screenshots/word-counter-joke-app.png",
      tags: ["React", "React Router", "Fetch API", "CSS", "useState"],
      sourceCode: "https://github.com/awesome-kartikey/kartikey-wordcount-ul",
      liveDemo: "https://kartikey-wordcount-ul.netlify.app/",
      features: [
        "Real-time character and word count",
        "Clear text functionality",
        "Fetches random Chuck Norris jokes",
        "Routing between counter and joke pages",
        "Custom 404 page",
      ],
    },
    {
      title: "Monsters Rolodex",
      description:
        'A React app fetching users ("monsters") from an API, displaying them as cards with RoboHash images, and providing real-time search.',
      image: "/project-screenshots/monsters-rolodex.png",
      tags: [
        "React",
        "Fetch API",
        "API Integration",
        "CSS Grid",
        "useState",
        "useEffect",
      ],
      sourceCode: "https://github.com/awesome-kartikey/monsters-rolodex-v2",
      liveDemo: "https://monster-rolodex-kartikey.netlify.app/",
      features: [
        "Fetches user data from JSONPlaceholder",
        "Displays users as monster cards (RoboHash images)",
        "Real-time search/filter by name",
        "Responsive card layout",
        "Built with functional components and hooks",
      ],
    },
    {
      title: "Gym Exercise Finder",
      description:
        "A React app using Material UI to find gym exercises via RapidAPI (ExerciseDB & YouTube). Browse by body part, search, view details/GIFs/videos.",
      image: "/project-screenshots/gym-exercise-finder.png",
      tags: [
        "React",
        "Material UI",
        "React Router",
        "API Integration",
        "RapidAPI",
        "CSS",
      ],
      sourceCode: "https://github.com/awesome-kartikey/gym-exercise",
      liveDemo: "https://kk-gold-gym.netlify.app/",
      features: [
        "Search exercises (name, target, equipment, body part)",
        "Browse by body part category",
        "Detailed exercise view (GIF, instructions)",
        "Related YouTube exercise videos",
        "Similar exercise suggestions",
        "Pagination & Loading states",
      ],
    },
    {
      title: "React Star Rating Component",
      description:
        "A simple, reusable, and interactive star rating component built with React and Vite, allowing visual rating selection.",
      image: "/public/project-screenshots/react-star-rating.png",
      tags: ["React", "Vite", "Components", "CSS", "useState", "Hooks"],
      sourceCode: "https://github.com/awesome-kartikey/react-star-rating",
      liveDemo: "",
      features: [
        "Interactive star rating selection",
        "Hover effect",
        "Clear rating functionality",
        "Customizable maximum rating",
        "onChange callback for parent component",
      ],
    },
    {
      title: "Robofriends (Basic)",
      description:
        'A simple React app displaying a searchable list of "robot friends" with data from JSONPlaceholder and images from RoboHash.',
      image: "/public/project-screenshots/robofriends.png",
      tags: ["React", "Fetch API", "API Integration", "Tachyons", "CSS"],
      sourceCode: "https://github.com/awesome-kartikey/robofriends",
      liveDemo: "",
      features: [
        "Displays list of robot cards",
        "Fetches user data dynamically",
        "Uses RoboHash for dynamic images",
        "Real-time search functionality",
        "Styled with Tachyons",
      ],
    },
    {
      title: "Twitter Clone Frontend",
      description:
        "A frontend clone of Twitter using Next.js, GraphQL, React Query, and Tailwind CSS. Handles Google Auth, tweet feed, posting (with images), profiles, following.",
      image: "/project-screenshots/twitter-clone-frontend.png",
      tags: [
        "React",
        "Next.js",
        "TypeScript",
        "GraphQL",
        "Tailwind CSS",
        "React Query",
        "Authentication",
        "Google OAuth",
      ],
      sourceCode: "https://github.com/awesome-kartikey/Twitter",
      liveDemo: "https://pulse-stream.onrender.com",
      features: [
        "View tweet feed",
        "Create tweets with image uploads (via S3 pre-signed URLs)",
        "User profiles with follow/unfollow",
        "Google Authentication",
        "Recommended users list",
        "Type-safe API interaction (GraphQL Codegen)",
        "Server state management with React Query",
      ],
    },
    {
      title: "Maze Pathfinder Visualizer",
      description:
        "An interactive maze generator (Recursive Backtracking) and pathfinding algorithm visualizer (BFS, DFS) built using React and Vite.",
      image: "/project-screenshots/maze-pathfinder-visualizer.png",
      tags: [
        "React",
        "Vite",
        "JavaScript",
        "CSS",
        "Algorithms",
        "Visualization",
      ],
      sourceCode:
        "https://github.com/awesome-kartikey/Pathfinder_Visualizer_Kartikey",
      liveDemo: "https://algomaze.netlify.app/",
      features: [
        "Random Maze Generation (Recursive Backtracking)",
        "Visualize BFS and DFS pathfinding",
        "Step-by-step algorithm visualization",
        "Interactive controls (generate, run BFS/DFS)",
        "Responsive design",
        "Loading indicator & Status messages",
      ],
    },
    {
      title: "Vue Image Filter Project",
      description:
        "A Vue 3 app allowing image upload, applying filters (via Photon WASM), and downloading the result. Built with Vite, TypeScript, Pinia, Tailwind.",
      image: "/project-screenshots/vue-image-filter-project.png",
      tags: [
        "Vue",
        "Vite",
        "TypeScript",
        "Pinia",
        "WASM",
        "Photon",
        "Tailwind CSS",
        "Image Processing",
      ],
      sourceCode: "https://github.com/awesome-kartikey/vue-image-project",
      liveDemo: "https://image-filer-kartikey.netlify.app/",
      features: [
        "Drag and drop image upload",
        "Apply predefined filters (oceanic, vintage, etc.)",
        "Client-side image processing with WebAssembly",
        "Download filtered image",
        "Responsive UI (Tailwind)",
      ],
    },
  ],
  backend: [
    {
      title: "Discord Weather/Astro Bot",
      description:
        "A Discord bot providing weather forecasts and astronomical data (sunrise/sunset) using slash commands and the WeatherAPI.com.",
      image: "/project-screenshots/discord-weather-astro-bot.png",
      tags: [
        "Node.js",
        "discord.js",
        "API Integration",
        "Axios",
        "Bot",
        "WeatherAPI",
      ],
      sourceCode: "https://github.com/awesome-kartikey/discord-bot",
      liveDemo: "",
      features: [
        "3-day weather forecast command (/forecast)",
        "Astronomical data command (/astro)",
        "Ping command for responsiveness check",
        "Utilizes Discord slash commands",
        "Fetches real-time data from WeatherAPI",
      ],
    },
    {
      title: "Kepler Habitable Planets Finder",
      description:
        "A Node.js script that analyzes NASA Kepler data (CSV) to identify potentially habitable exoplanets based on specific criteria.",
      image: "/project-screenshots/kepler-habitable-planets.png",
      tags: ["Node.js", "CSV Parsing", "Data Processing", "Streams"],
      sourceCode: "https://github.com/awesome-kartikey/planets-project",
      liveDemo: "",
      features: [
        "Parses CSV data using streams",
        "Filters exoplanets by disposition, stellar flux, radius",
        "Outputs names and count of habitable planets",
        "Uses `csv-parse` library",
      ],
    },
    {
      title: "Short URL Service (Node.js)",
      description:
        "A Node.js/Express/MongoDB application for shortening URLs, with user authentication, redirection, and click tracking.",
      image: "/project-screenshots/short-url-service-nodejs.png",
      tags: [
        "Node.js",
        "Express",
        "MongoDB",
        "Mongoose",
        "EJS",
        "Authentication",
        "JWT (implied)",
      ],
      sourceCode: "https://github.com/awesome-kartikey/short-url-nodejs",
      liveDemo: "https://short-url-nodejs.onrender.com",
      features: [
        "User signup/login",
        "Generate unique short IDs for URLs",
        "Redirect short URLs to original URLs",
        "Track clicks per URL",
        "List user-specific generated URLs",
        "Basic web interface using EJS",
      ],
    },
    {
      title: "Stack Overflow Clone Backend",
      description:
        "Backend API service for a Stack Overflow clone using Node.js, Express, MongoDB. Provides endpoints for auth, questions, answers, and profiles.",
      image: "/project-screenshots/stackoverflow-clone-backend.png",
      tags: [
        "Node.js",
        "Express",
        "MongoDB",
        "Mongoose",
        "JWT",
        "bcryptjs",
        "REST API",
      ],
      sourceCode: "https://github.com/awesome-kartikey/stack-overflow-backend",
      liveDemo: "",
      features: [
        "Secure user authentication (Signup/Login) with JWT",
        "CRUD operations for Questions (Ask, View, Delete, Vote)",
        "CRUD operations for Answers (Post, Delete)",
        "View and update user profiles",
        "RESTful API design",
      ],
    },
    {
      title: "Twitter Clone Backend Server",
      description:
        "A GraphQL backend for a Twitter clone using Node.js, TypeScript, PostgreSQL, Prisma, Redis, S3. Handles auth, tweets, follows, image uploads.",
      image: "/project-screenshots/twitter-clone-backend.png",
      tags: [
        "Node.js",
        "Express",
        "GraphQL",
        "Apollo Server",
        "TypeScript",
        "PostgreSQL",
        "Prisma",
        "Redis",
        "AWS S3",
        "JWT",
        "Authentication",
      ],
      sourceCode:
        "https://github.com/awesome-kartikey/piyushgarg-dev-twitter-clone-server",
      liveDemo: "",
      features: [
        "Google OAuth verification & JWT sessions",
        "GraphQL API for users, tweets, follows",
        "Create tweets with image URLs",
        "Generate pre-signed S3 URLs for image uploads",
        "Follow/unfollow system",
        "User recommendations",
        "Redis caching for tweets/recommendations",
        "Rate limiting for tweet creation",
      ],
    },
  ],
  fullstack: [
    {
      title: "AWS Serverless Distance Calculator",
      description:
        "A web app using AWS serverless tech (API Gateway, Lambda, DynamoDB) to calculate the great-circle distance between two points.",
      image: "/project-screenshots/aws-serverless-distance-calculator.png",
      tags: [
        "AWS Lambda",
        "API Gateway",
        "DynamoDB",
        "Serverless",
        "JavaScript",
        "HTML",
        "CSS",
        "Python",
      ],
      sourceCode: "https://github.com/awesome-kartikey/AWS-Project-Code",
      liveDemo: "",
      features: [
        "Simple web interface for input",
        "Haversine formula distance calculation",
        "Serverless backend (Lambda)",
        "API via API Gateway",
        "Data persistence in DynamoDB",
        "Scalable architecture",
      ],
    },
    {
      title: "Crwn Clothing E-commerce",
      description:
        "A full-stack e-commerce app (React/Redux frontend, Firebase backend) for clothing. Features browsing, cart, auth (Email/Google), Stripe payments.",
      image: "/project-screenshots/crwn-clothing-e-commerce.png",
      tags: [
        "React",
        "Redux",
        "Redux Saga",
        "Firebase",
        "Firestore",
        "Firebase Auth",
        "Stripe",
        "Styled Components",
        "TypeScript",
        "Netlify Functions",
      ],
      sourceCode: "https://github.com/awesome-kartikey/crwn-clothing-kartikey",
      liveDemo: "https://crown-clothing-karikey.netlify.app/",
      features: [
        "Product browsing by category",
        "Shopping cart functionality",
        "User Authentication (Email/Password, Google)",
        "Secure payments via Stripe",
        "State management with Redux/Saga",
        "Firebase backend for data/auth",
        "Serverless function for Stripe integration",
      ],
    },
    {
      title: "Kartikey Portfolio with AI Chatbot",
      description:
        "An interactive developer portfolio (React/Vite/Tailwind) with animations, blog integration (Hashnode), contact form (EmailJS), and an AI chatbot (Gemini via Supabase).",
      image: "/project-screenshots/kartikey-portfolio-with-ai-chatbot.png",
      tags: [
        "React",
        "Vite",
        "Tailwind CSS",
        "Framer Motion",
        "Supabase",
        "Edge Functions",
        "AI",
        "Gemini",
        "EmailJS",
        "Hashnode API",
        "Three.js",
      ],
      sourceCode: "https://github.com/awesome-kartikey/kartikey-portfolio-ai",
      liveDemo: "https://iamkartikey.vercel.app/",
      features: [
        "Interactive UI with animations",
        "Responsive design",
        "Dark/Light mode",
        "Project showcase & Skills section",
        "AI Chatbot knowledgeable about the portfolio owner",
        "Dynamic blog post fetching (Hashnode)",
        "Contact form (EmailJS)",
        "Resume viewer & Particle background",
      ],
    },
    {
      title: "WriteNode Blogging App",
      description:
        "A lightweight React blogging app using Firebase (Auth/Firestore). Users can log in via Google, create posts, and delete their own posts.",
      image: "/project-screenshots/writenode-blogging-app.png",
      tags: [
        "React",
        "Firebase",
        "Firebase Auth",
        "Firestore",
        "React Router",
        "CSS",
        "Authentication",
      ],
      sourceCode: "https://github.com/awesome-kartikey/kartikey-writenode",
      liveDemo: "https://kartikey-writenode.netlify.app/",
      features: [
        "Google Authentication",
        "Create and view posts",
        "Delete own posts",
        "Real-time updates (implicit via Firestore)",
        "Loading skeletons",
        "Protected routes for creation",
      ],
    },
    {
      title: "Multiplayer Pong Game",
      description:
        "A real-time multiplayer Pong game built with Node.js, Express, Socket.IO, and HTML Canvas. Features simple matchmaking.",
      image: "/project-screenshots/multiplayer-pong-game.png",
      tags: [
        "Node.js",
        "Express",
        "Socket.IO",
        "WebSockets",
        "Game Development",
        "Canvas API",
        "HTML",
        "CSS",
        "JavaScript",
      ],
      sourceCode: "https://github.com/awesome-kartikey/multiplayer-pong",
      liveDemo: "",
      features: [
        "Real-time multiplayer gameplay",
        "Simple matchmaking (pairs players)",
        "Classic Pong mechanics",
        "Low-latency communication via Socket.IO",
        "Canvas rendering",
      ],
    },
    {
      title: "NASA Mission Control Dashboard",
      description:
        "A full-stack app to explore habitable planets (Kepler data), schedule/view rocket launches (including SpaceX data), and abort missions, with a sci-fi UI.",
      image: "/project-screenshots/nasa-mission-control-dashboard.png",
      tags: [
        "React",
        "Node.js",
        "Express",
        "MongoDB",
        "Mongoose",
        "API Integration",
        "SpaceX API",
        "Arwes UI",
        "Docker",
      ],
      sourceCode: "https://github.com/awesome-kartikey/nasa-project",
      liveDemo: "https://nasa-project-0c1g.onrender.com/",
      features: [
        "Explore habitable exoplanets",
        "Schedule new rocket launches",
        "View upcoming and past launches (user + SpaceX)",
        "Abort scheduled missions",
        "Interactive Sci-Fi UI (Arwes)",
        "Integrates real SpaceX data",
        "Dockerized for deployment",
      ],
    },
    {
      title: "Notion Clone (Jotion)",
      description:
        "A fullstack Notion clone using Next.js, Convex (real-time DB), Clerk (auth), EdgeStore (files), BlockNote (editor). Features nested docs, publishing, search.",
      image: "/project-screenshots/notion-clone-jotion.png",
      tags: [
        "Next.js",
        "TypeScript",
        "Convex",
        "Clerk",
        "EdgeStore",
        "BlockNote",
        "Tailwind CSS",
        "Real-time",
        "Authentication",
        "File Storage",
      ],
      sourceCode: "https://github.com/awesome-kartikey/notion-clone-kartikey",
      liveDemo: "https://notion-clone-kartikey.vercel.app/",
      features: [
        "Real-time database updates (Convex)",
        "Notion-style rich text editor (BlockNote)",
        "Nested documents",
        "Light/Dark mode",
        "Authentication (Clerk)",
        "Cover image uploads (EdgeStore)",
        "Soft delete & restore (Trash Can)",
        "Publish documents publicly",
        "Search functionality",
      ],
    },
    {
      title: "SmartBrain Face Detection",
      description:
        "A full-stack app (React frontend, Node/Express/PostgreSQL backend) that detects faces in images via URL using the Clarifai API and tracks user submissions.",
      image: "/project-screenshots/smartbrain-face-detection.png",
      tags: [
        "React",
        "Node.js",
        "Express",
        "PostgreSQL",
        "Knex.js",
        "bcryptjs",
        "Clarifai API",
        "API Integration",
        "Authentication",
        "Tachyons",
      ],
      sourceCode: "https://github.com/awesome-kartikey/SmartBrain-Project",
      liveDemo: "https://intellieyes.netlify.app/",
      features: [
        "User registration and sign-in",
        "Face detection in images via URL (Clarifai API)",
        "Tracks user submission count (rank)",
        "Interactive React UI",
        "Animated particle background",
      ],
    },
    {
      title: "SpeakEasyAI (Video/Audio to Blog)",
      description:
        "An AI-powered SaaS app (Next.js 14, OpenAI, Stripe, Clerk, NeonDB, UploadThing) that converts video/audio files into SEO-friendly blog posts.",
      image: "/project-screenshots/speakeasyai-videoaudio-to-blog.png",
      tags: [
        "Next.js",
        "TypeScript",
        "Tailwind CSS",
        "ShadCN UI",
        "Clerk",
        "NeonDb",
        "PostgreSQL",
        "UploadThing",
        "OpenAI API",
        "Whisper API",
        "GPT API",
        "Stripe",
        "SaaS",
        "AI",
      ],
      sourceCode: "https://github.com/awesome-kartikey/speakeasyai",
      liveDemo: "https://videotonotes.vercel.app/",
      features: [
        "AI transcription (Whisper) & blog generation (GPT)",
        "Audio/Video file uploads (UploadThing)",
        "Authentication (Clerk)",
        "Subscription plans via Stripe",
        "User dashboard & post management",
        "Integrated Markdown editor",
        "Content export as Markdown",
      ],
    },
    {
      title: "Stack Overflow Clone (Kartikey)",
      description:
        "A full-stack Stack Overflow clone using React/Redux frontend and Node/Express/MongoDB backend. Features auth, Q&A, voting, tags, profiles.",
      image: "/project-screenshots/stack-overflow-clone-kartikey.png",
      tags: [
        "React",
        "Redux",
        "Redux Thunk",
        "Node.js",
        "Express",
        "MongoDB",
        "Mongoose",
        "JWT",
        "bcryptjs",
        "REST API",
        "Authentication",
      ],
      sourceCode: "https://github.com/awesome-kartikey/Stack-Overflow-Kartikey",
      liveDemo: "https://stack-overflow-kartikey.netlify.app/",
      features: [
        "User Authentication (JWT)",
        "Ask and Answer Questions",
        "Upvote/Downvote Questions",
        "View Questions by Tags",
        "User Profiles with editing",
        "List of Users",
      ],
    },
    {
      title: "Dev Overflow (Stack Overflow Clone Next.js 14)",
      description:
        "A modern Stack Overflow clone using Next.js 14, TypeScript, MongoDB, Clerk Auth, TinyMCE editor, AI answer generation (OpenAI), voting, reputation, collections.",
      image:
        "/project-screenshots/dev-overflow-stack-overflow-clone-nextjs-14.png",
      tags: [
        "Next.js",
        "TypeScript",
        "Tailwind CSS",
        "Shadcn UI",
        "MongoDB",
        "Mongoose",
        "Clerk",
        "Authentication",
        "TinyMCE",
        "OpenAI API",
        "AI",
        "Server Actions",
      ],
      sourceCode: "https://github.com/awesome-kartikey/stack_overflow_nextjs14",
      liveDemo: "https://kartikey-dev-overflow.vercel.app/",
      features: [
        "Authentication (Clerk)",
        "Ask/Answer Questions (TinyMCE editor)",
        "Voting & Reputation System",
        "Save Questions to Collections",
        "User Profiles & Editing",
        "Community & Tags Pages",
        "Local & Global Search",
        "AI-Powered Answer Generation (OpenAI)",
        "Light/Dark Mode",
      ],
    },
  ],
};

export const projectCategories = [
  { id: "all", label: "All Projects" },
  { id: "javascript", label: "JavaScript" },
  { id: "react", label: "React & Vue" }, // Renamed to include Vue project
  { id: "backend", label: "Backend" },
  { id: "fullstack", label: "Full Stack" },
];
